

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.lang.Math;
import java.sql.Statement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JainVipray
 */
public class MarkSheet extends DBConnection {

    /**
     * Creates new form MarkSheet
     */
    public String a,ya,sem,ask;
    public MarkSheet(String adm,String y ) {
        a=adm;
        ask=adm;
        ya=y;
        sem=y;
        initComponents();
        
        getContentPane().setBackground(new Color(44,62,80));
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
                setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 /*   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  */  
    
       private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        
        
        
        

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(javax.swing.UIManager.getDefaults().getColor("window"));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Madhav Institute of Technology and Science, Gwalior (M.P.)");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\JainVipray\\Desktop\\site-logo.png")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mark-Sheet");

        jLabel4.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name:");

        jLabel5.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Father's Name:");

        jLabel6.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mother's Name:");

        jLabel7.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Roll No.");

        jLabel8.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DOB::");

        jLabel13.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N

        jLabel14.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Sr. No.");

        jLabel15.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("P10765");

        jLabel16.setFont(new java.awt.Font("Monospaced", 1, 17)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(" SEMESTER- VI");

        jLabel17.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("VIPRAY JAIN");

        jLabel18.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("VIJAY KUMAR JAIN");

        jLabel19.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("PREETI JAIN");

        jLabel20.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("0901CS151122");

        jLabel21.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("18/03/1999");

        jLabel10.setIcon(new javax.swing.ImageIcon("D:\\IMPDOCS\\VIP.jpg")); // NOI18N
        jLabel10.setText("jLabel10");
        
        jLabel22.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Lag gye");

        
        
        
       
        
        
        
        
        
        
        
        
        
        
        
        
        
        

        jTable2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        Object dta[][]  =new Object [6][6];
        String head[] =new String [] {
                "THEORY SUBJECTS", "MAX Marks(Mid-Sem)", "MID-I", "MID-II", "MAX Marks(End-Sem)", "END-SEMESTER"
            };
        
        
        
        
        
        
        
        
        
          String q= "Select * FROM student WHERE adm='"+a+"' AND sem='"+ya+"'";
			System.out.print(q);
			//String id = "";
			//ResultSet rs;
			try {
				ResultSet rs1=s.executeQuery(q);
				System.out.println("DATA: Nikaalo \n");
                                if(rs1.next()){
                                jLabel20.setText(rs1.getString("adm"));
                                jLabel17.setText(rs1.getString("name"));
                                jLabel18.setText(rs1.getString("father_name"));
                                jLabel19.setText(rs1.getString("mother_name"));
                                jLabel16.setText("SEMESTER - "+rs1.getString("sem"));
                                }
                                
                        //String adm = rs1.getString("addmission_num");
			//String yr = rs1.getString("year");
			
			rs1.close();
			String q1= "SELECT * FROM first WHERE adm='"+a+"' AND sem='"+ya+"'";
			String q2= "SELECT * FROM second WHERE adm='"+a+"' AND sem='"+ya+"'";
			String q3= "SELECT * FROM end WHERE adm='"+a+"' AND sem='"+ya+"'";
                        
                        ResultSet rs2=s.executeQuery(q1);
                        /*dta[0][0]="ENG";
                        dta[2][0]="HIN";
                        dta[3][0]="MATH";
                        dta[1][0]="EVS";
                        dta[4][0]="GK";
                        dta[5][0]="TOTAL";
                        */
                        //  SEM FIXER
                        
                            if(ya.equals("I")){
                                   dta[0][0]="Mathematic-I";
                                   dta[2][0]="Basic Computer Programming";
                                   dta[3][0]="Engineering Chemistry";
                                   dta[1][0]="Basic Computer Engineering";
                                   dta[4][0]="Humanitites";
                                   dta[5][0]="TOTAL";


                                }
                                    if(ya.equals("II")){
                                        
                                   dta[0][0]="Mathematic-II";
                                   dta[2][0]="Data Structure";
                                   dta[3][0]="Engineering Physics";
                                   dta[1][0]="Engineering Graphics";
                                   dta[4][0]="Concepts of Engineering Design";
                                   dta[5][0]="TOTAL";
                                       
                                    }
                                    if(ya.equals("III")){
                                        
                                        dta[0][0]="Mathematic-III";
                                        dta[2][0]="Digital Electronics";
                                        dta[3][0]="OOPs";
                                        dta[1][0]="Computer Graphics";
                                        dta[4][0]="Operating System";
                                        dta[5][0]="TOTAL"; 
                                    }
                                    if(ya.equals("IV")){
                                        
                                        
                                        dta[0][0]="Mathematic-IV";
                                        dta[2][0]="Design and Analysis of Algorithm";
                                        dta[3][0]="Computer System Organization";
                                        dta[1][0]="Computer Networks";
                                        dta[4][0]="Database Management System";
                                        dta[5][0]="TOTAL";
                                        
                                    }
                                    if(ya.equals("V")){
                                        
                                        dta[0][0]="PMME";
                                        dta[2][0]="Microprocessor";
                                        dta[3][0]="Software Engineering";
                                        dta[1][0]="Networking with TCP/IP";
                                        dta[4][0]="Theory of Computation";
                                        dta[5][0]="TOTAL";
                                      
                                    }
                                    if(ya.equals("VI")){
                                        
                                        
                                        dta[0][0]="Compiler Design";
                                        dta[2][0]="Software Project Managemnt";
                                        dta[3][0]="Network and Web Security";
                                        dta[1][0]="Mobile Computing";
                                        dta[4][0]="Cloud Computing";
                                        dta[5][0]="TOTAL";
                                        
                                    }
                        
                        dta[0][1]="20";
                        dta[2][1]="20";
                        dta[3][1]="20";
                        dta[1][1]="20";
                        dta[4][1]="20";
                        dta[5][1]="100";
                        
                        
                        dta[0][4]="70";
                        dta[2][4]="70";
                        dta[3][4]="70";
                        dta[1][4]="70";
                        dta[4][4]="70";
                        dta[5][4]="350";
                        
                        int a=0;
                        
                        
                        if(rs2.next()){
                                /*
                                dta[0][2]=rs2.getString("english");
                                dta[1][2]=rs2.getString("hindi");
                                dta[2][2]=rs2.getString("maths");
                                dta[3][2]=rs2.getString("evs");
                                dta[4][2]=rs2.getString("gk");
                                dta[5][2]=aa;
                                */
                                
                                
                                    if(sem.equals("I")){
                                    
                                        dta[0][2]=rs2.getString("m1");
                                        dta[1][2]=rs2.getString("bcp");
                                        dta[2][2]=rs2.getString("ec");
                                        dta[3][2]=rs2.getString("bce");
                                        dta[4][2]=rs2.getString("hum");

                                    }
                                    if(sem.equals("II")){
                                        
                                        dta[0][2]=rs2.getString("m2");
                                        dta[1][2]=rs2.getString("ds");
                                        dta[2][2]=rs2.getString("phy");
                                        dta[3][2]=rs2.getString("ed");
                                        dta[4][2]=rs2.getString("ced");

                                    }
                                    if(sem.equals("III")){
                                        
                                        dta[0][2]=rs2.getString("m3");
                                        dta[1][2]=rs2.getString("de");
                                        dta[2][2]=rs2.getString("oops");
                                        dta[3][2]=rs2.getString("cg");
                                        dta[4][2]=rs2.getString("os");
                                        
                                    }
                                    if(sem.equals("IV")){
                                        
                                        
                                        dta[0][2]=rs2.getString("m4");
                                        dta[1][2]=rs2.getString("daa");
                                        dta[2][2]=rs2.getString("cso");
                                        dta[3][2]=rs2.getString("cn");
                                        dta[4][2]=rs2.getString("dbms");
                                        
                                    }
                                    if(sem.equals("V")){
                                        dta[0][2]=rs2.getString("pmme");
                                        dta[1][2]=rs2.getString("micro");
                                        dta[2][2]=rs2.getString("swe");
                                        dta[3][2]=rs2.getString("tcp");
                                        dta[4][2]=rs2.getString("toc");
                                        
                                    }
                                    if(sem.equals("VI")){
                                        dta[0][2]=rs2.getString("compiler");
                                        dta[1][2]=rs2.getString("spm");
                                        dta[2][2]=rs2.getString("web");
                                        dta[3][2]=rs2.getString("mc");
                                        dta[4][2]=rs2.getString("cc");
                                        
                                    }
                                
                                a+= Integer.parseInt(dta[0][2].toString());
                                a+= Integer.parseInt(dta[1][2].toString());
                                a+= Integer.parseInt(dta[2][2].toString());
                                a+= Integer.parseInt(dta[3][2].toString());
                                a+= Integer.parseInt(dta[4][2].toString());   
                                String aa=Integer.toString(a);
                                dta[5][2]=aa;
                                
                                }
                        rs2.close();
                        a=0;
                        ResultSet rs3=s.executeQuery(q2);
                        if(rs3.next()){
                                if(sem.equals("I")){
                                    
                                        dta[0][3]=rs3.getString("m1");
                                        dta[1][3]=rs3.getString("bcp");
                                        dta[2][3]=rs3.getString("ec");
                                        dta[3][3]=rs3.getString("bce");
                                        dta[4][3]=rs3.getString("hum");

                                    }
                                    if(sem.equals("II")){
                                        
                                        dta[0][3]=rs3.getString("m2");
                                        dta[1][3]=rs3.getString("ds");
                                        dta[2][3]=rs3.getString("phy");
                                        dta[3][3]=rs3.getString("ed");
                                        dta[4][3]=rs3.getString("ced");

                                    }
                                    if(sem.equals("III")){
                                        
                                        dta[0][3]=rs3.getString("m3");
                                        dta[1][3]=rs3.getString("de");
                                        dta[2][3]=rs3.getString("oops");
                                        dta[3][3]=rs3.getString("cg");
                                        dta[4][3]=rs3.getString("os");
                                        
                                    }
                                    if(sem.equals("IV")){
                                        
                                        
                                        dta[0][3]=rs3.getString("m4");
                                        dta[1][3]=rs3.getString("daa");
                                        dta[2][3]=rs3.getString("cso");
                                        dta[3][3]=rs3.getString("cn");
                                        dta[4][3]=rs3.getString("dbms");
                                       
                                    }
                                    if(sem.equals("V")){
                                        dta[0][3]=rs3.getString("pmme");
                                        dta[1][3]=rs3.getString("micro");
                                        dta[2][3]=rs3.getString("swe");
                                        dta[3][3]=rs3.getString("tcp");
                                        dta[4][3]=rs3.getString("toc");
                                        
                                    }
                                    if(sem.equals("VI")){
                                        dta[0][3]=rs3.getString("compiler");
                                        dta[1][3]=rs3.getString("spm");
                                        dta[2][3]=rs3.getString("web");
                                        dta[3][3]=rs3.getString("mc");
                                        dta[4][3]=rs3.getString("cc");
                                        
                                    }
                                    
                                    
                                a+= Integer.parseInt(dta[0][3].toString());
                                a+= Integer.parseInt(dta[1][3].toString());
                                a+= Integer.parseInt(dta[2][3].toString());
                                a+= Integer.parseInt(dta[3][3].toString());
                                a+= Integer.parseInt(dta[4][3].toString());   
                                String aa=Integer.toString(a);
                                dta[5][3]=aa;
                                }
                        rs3.close();
                        
                        a=0;
                        ResultSet rs4=s.executeQuery(q3);
                        if(rs4.next()){
                                if(sem.equals("I")){
                                    
                                        dta[0][5]=rs4.getString("m1");
                                        dta[1][5]=rs4.getString("bcp");
                                        dta[2][5]=rs4.getString("ec");
                                        dta[3][5]=rs4.getString("bce");
                                        dta[4][5]=rs4.getString("hum");

                                    }
                                    if(sem.equals("II")){
                                        
                                        dta[0][5]=rs4.getString("m2");
                                        dta[1][5]=rs4.getString("ds");
                                        dta[2][5]=rs4.getString("phy");
                                        dta[3][5]=rs4.getString("ed");
                                        dta[4][5]=rs4.getString("ced");

                                    }
                                    if(sem.equals("III")){
                                        
                                        dta[0][5]=rs4.getString("m3");
                                        dta[1][5]=rs4.getString("de");
                                        dta[2][5]=rs4.getString("oops");
                                        dta[3][5]=rs4.getString("cg");
                                        dta[4][5]=rs4.getString("os");
                                        
                                    }
                                    if(sem.equals("IV")){
                                        
                                        
                                        dta[0][5]=rs4.getString("m4");
                                        dta[1][5]=rs4.getString("daa");
                                        dta[2][5]=rs4.getString("cso");
                                        dta[3][5]=rs4.getString("cn");
                                        dta[4][5]=rs4.getString("dbms");
                                        
                                    }
                                    if(sem.equals("V")){
                                        dta[0][5]=rs4.getString("pmme");
                                        dta[1][5]=rs4.getString("micro");
                                        dta[2][5]=rs4.getString("swe");
                                        dta[3][5]=rs4.getString("tcp");
                                        dta[4][5]=rs4.getString("toc");
                                        
                                    }
                                    if(sem.equals("VI")){
                                        dta[0][5]=rs4.getString("compiler");
                                        dta[1][5]=rs4.getString("spm");
                                        dta[2][5]=rs4.getString("web");
                                        dta[3][5]=rs4.getString("mc");
                                        dta[4][5]=rs4.getString("cc");
                                        
                                    }
                                    
                                a+= Integer.parseInt(dta[0][5].toString());
                                a+= Integer.parseInt(dta[1][5].toString());
                                a+= Integer.parseInt(dta[2][5].toString());
                                a+= Integer.parseInt(dta[3][5].toString());
                                a+= Integer.parseInt(dta[4][5].toString());   
                                String aa=Integer.toString(a);
                                dta[5][5]=aa;
                                }
                        rs4.close();
                        
                        
                        int m1=Integer.parseInt(dta[5][2].toString());
                        int m2=Integer.parseInt(dta[5][3].toString());
                        int m=  (int) Math.ceil(((m1+m2)/2));//(m1+m2)/2;
                        int es=Integer.parseInt(dta[5][5].toString());
                        int f= m+es;
                        if(f>148)
                        {
                            jLabel22.setText("Passed");
                             Statement s5 = c.createStatement();
                            String q5 = "Update student set status='1' where adm='"+ask+"' AND sem='"+ya+"'";
                            s5.executeUpdate(q5);
                            System.out.println(s5);
                            s5.close();
                            
                        }
                        
                     /*   
                        if(rs2.next()){
                                a+= Integer.parseInt(rs2.getString("english"));
                                a+= Integer.parseInt(rs2.getString("hindi"));
                                a+= Integer.parseInt(rs2.getString("maths"));
                                a+= Integer.parseInt(rs2.getString("evs"));
                                a+= Integer.parseInt(rs2.getString("gk"));
                                String aa=Integer.toString(a);
                                dta[0][2]=rs2.getString("english");
                                dta[1][2]=rs2.getString("hindi");
                                dta[2][2]=rs2.getString("maths");
                                dta[3][2]=rs2.getString("evs");
                                dta[4][2]=rs2.getString("gk");
                                dta[5][2]=aa;
                                
                                }
                        rs2.close();
                        a=0;
                        ResultSet rs3=s.executeQuery(q2);
                        if(rs3.next()){
                                a+= Integer.parseInt(rs3.getString("english"));
                                a+= Integer.parseInt(rs3.getString("hindi"));
                                a+= Integer.parseInt(rs3.getString("maths"));
                                a+= Integer.parseInt(rs3.getString("evs"));
                                a+= Integer.parseInt(rs3.getString("gk"));
                                String aa=Integer.toString(a);
                                dta[0][3]=rs3.getString("english");
                                dta[1][3]=rs3.getString("hindi");
                                dta[2][3]=rs3.getString("maths");
                                dta[3][3]=rs3.getString("evs");
                                dta[4][3]=rs3.getString("gk");
                                dta[5][3]=aa;
                                
                                }
                        rs3.close();
                        
                        a=0;
                        ResultSet rs4=s.executeQuery(q3);
                        if(rs4.next()){
                                a+= Integer.parseInt(rs4.getString("english"));
                                a+= Integer.parseInt(rs4.getString("hindi"));
                                a+= Integer.parseInt(rs4.getString("maths"));
                                a+= Integer.parseInt(rs4.getString("evs"));
                                a+= Integer.parseInt(rs4.getString("gk"));
                                String aa=Integer.toString(a);
                                dta[0][4]=rs4.getString("english");
                                dta[1][4]=rs4.getString("hindi");
                                dta[2][4]=rs4.getString("maths");
                                dta[3][4]=rs4.getString("evs");
                                dta[4][4]=rs4.getString("gk");
                                dta[5][4]=aa;
                                
                                }
                        rs4.close();
                       
                        */
			} catch (SQLException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
                                 JOptionPane.showMessageDialog(this,"Invalid Entry! Year and Fee Balance Must be Integer");
			}
        
        
        
        
        
        
        
        
        javax.swing.table.DefaultTableModel m =new javax.swing.table.DefaultTableModel(dta,head);
        jTable2.setModel(m);
        
        
        
        
        
        
         		
        
        // .setModel ke ander tha
        /*
        new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ENGLISH", "       A+", "       A", "       A+", "       B+"},
                {"HINDI", "       A+", "       C+", "       C", "       B"},
                {"MATHS", "       A+", "       B+", "       A", "       A+"},
                {"", "       A+", "       B", "       B", "       A+"},
                {"COMPILER", "       A+", "       B", "       B+", "       A+"},
                {"TOTAL", null, null, null, null}
            },
            new String [] {
                "THEORY SUBJECTS", "MAX GRADES", "MID-I", "MID-II", "END-SEMESTER"
            }
        )
        
        
        */
        jTable2.setAutoscrolls(false);
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable2.setEnabled(false);
        jTable2.setMinimumSize(new java.awt.Dimension(75000, 25000));
        jTable2.setRowHeight(50);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(600);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel9.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class Teacher");

        jLabel11.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Head Master");

        jLabel12.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("STATUS:");

        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addGap(478, 478, 478)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 803, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)))))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1462, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel22)
                                .addGap(574, 574, 574)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel17))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel18))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel19))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel20))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel21)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel22))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }                     

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkSheet("151122","VI").setVisible(true);
            }
        });
    }
    
    
    
  // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable2;
    // End of variables declaration  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
